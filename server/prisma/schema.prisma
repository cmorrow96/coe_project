generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model comment {
  id          Int       @id @default(autoincrement())
  user_id     Int
  game_id     Int
  post        String?   @db.VarChar(500)
  time_posted DateTime? @db.Timestamp(6)
  game        game      @relation(fields: [game_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model developer {
  id   Int     @id @default(autoincrement())
  name String? @db.VarChar(100)
  game game[]
}

model favourite {
  id                  Int              @id @default(autoincrement())
  user_id             Int
  game_id             Int
  favourite_status_id Int
  rating              String?          @db.VarChar(2)
  favourite_status    favourite_status @relation(fields: [favourite_status_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  game                game             @relation(fields: [game_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                user             @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model favourite_status {
  id        Int         @id @default(autoincrement())
  type      String?     @db.VarChar(25)
  favourite favourite[]
}

model flyway_schema_history {
  installed_rank Int      @id(map: "flyway_schema_history_pk")
  version        String?  @db.VarChar(50)
  description    String   @db.VarChar(200)
  type           String   @db.VarChar(20)
  script         String   @db.VarChar(1000)
  checksum       Int?
  installed_by   String   @db.VarChar(100)
  installed_on   DateTime @default(now()) @db.Timestamp(6)
  execution_time Int
  success        Boolean

  @@index([success], map: "flyway_schema_history_s_idx")
}

model game {
  id            Int          @id @default(autoincrement())
  created_by_id Int
  name          String?      @db.VarChar(100)
  developer_id  Int
  publisher_id  Int
  release_date  DateTime?    @db.Date
  description   String?      @db.VarChar(500)
  user          user         @relation(fields: [created_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  developer     developer    @relation(fields: [developer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  publisher     publisher    @relation(fields: [publisher_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  comment       comment[]
  favourite     favourite[]
  game_genre    game_genre[]
}

model game_genre {
  id       Int   @id @default(autoincrement())
  game_id  Int
  genre_id Int
  game     game  @relation(fields: [game_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  genre    genre @relation(fields: [genre_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model genre {
  id         Int          @id @default(autoincrement())
  name       String?      @db.VarChar(100)
  game_genre game_genre[]
}

model publisher {
  id   Int     @id @default(autoincrement())
  name String? @db.VarChar(100)
  game game[]
}

model user {
  id            Int         @id @default(autoincrement())
  user_type_id  Int
  username      String?     @db.VarChar(100)
  password      String?     @db.VarChar(100)
  email_address String?     @db.VarChar(100)
  forename      String?     @db.VarChar(100)
  surname       String?     @db.VarChar(100)
  about_me      String?     @db.VarChar(100)
  user_type     user_type   @relation(fields: [user_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  comment       comment[]
  favourite     favourite[]
  game          game[]
}

model user_type {
  id          Int     @id @default(autoincrement())
  description String? @db.VarChar(100)
  user        user[]
}
